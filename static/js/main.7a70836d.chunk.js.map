{"version":3,"sources":["assets/pokeball.png","actions/index.js","reducers/pokemonReducer.js","components/Title.js","data/data.js","components/Form.js","actions/utilities.js","components/TeamCard.js","components/EmptyTeamCard.js","components/Team.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","addNickname","nickname","key","dispatch","type","payload","initialState","team","teamSize","isFetchingData","error","isEditingNickname","isEditingAbility","isEditingMoves","Title","props","kantoPokemon","connect","state","getData","pokemonName","axios","get","toLowerCase","then","res","data","catch","console","clearTeam","useState","activePokemon","setActivePokemon","onChange","e","target","value","disabled","selected","map","item","dex","onClick","preventDefault","capitalize","str","toUpperCase","slice","formatString","splitString","split","final","forEach","toggleEditNickname","removePokemon","changeAbility","ability","toggleEditAbility","changeMoves","moves","toggleEditMoves","setNickname","setAbility","firstMove","setFirstMove","secondMove","setSecondMove","thirdMove","setThirdMove","fourthMove","setFourthMove","log","className","posn","src","pokemon","sprites","front_default","alt","species","name","abilities","chosenAbility","move","arr","filter","Set","size","length","validateMoves","movesArray","chosenMoves","EmptyTeamCard","require","empty","i","push","store","createStore","action","applyMiddleware","thunk","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"0LAAAA,EAAOC,QAAU,IAA0B,sC,0HCmC9BC,EAAc,SAACC,EAAUC,GAAX,OAAmB,SAAAC,GAC1CA,EAAS,CAAEC,KA5Ba,eA4BOC,QAAS,CAACJ,SAAUA,EAAUC,IAAKA,OCtBhEI,EAAe,CACjBC,KAAM,GACNC,SAAU,EACVC,gBAAgB,EAChBC,MAAO,GACPC,mBAAoB,EACpBC,kBAAmB,EACnBC,gBAAiB,G,eCZNC,G,MAPD,SAAAC,GACV,OACI,6BACI,uD,OCoJGC,EAzJM,CAAC,YAClB,UACA,WACA,aACA,aACA,YACA,WACA,YACA,YACA,WACA,UACA,aACA,SACA,SACA,WACA,SACA,YACA,UACA,UACA,WACA,UACA,SACA,QACA,QACA,UACA,SACA,YACA,YACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,WACA,SACA,YACA,aACA,aACA,QACA,SACA,SACA,QACA,YACA,QACA,WACA,UACA,WACA,UACA,UACA,SACA,UACA,UACA,UACA,SACA,WACA,YACA,WACA,UACA,YACA,YACA,OACA,UACA,WACA,SACA,UACA,UACA,aACA,aACA,aACA,YACA,aACA,UACA,WACA,QACA,SACA,WACA,WACA,UACA,YACA,WACA,kBACA,QACA,SACA,OACA,UACA,SACA,MACA,WACA,WACA,SACA,UACA,SACA,OACA,UACA,QACA,SACA,UACA,UACA,YACA,YACA,YACA,SACA,UACA,YACA,aACA,YACA,UACA,UACA,UACA,SACA,UACA,UACA,aACA,SACA,SACA,UACA,UACA,SACA,UACA,WACA,UACA,OACA,aACA,SACA,SACA,SACA,WACA,WACA,SACA,QACA,QACA,WACA,UACA,UACA,UACA,UACA,UACA,SACA,WACA,aACA,UACA,WACA,SACA,UACA,UACA,YACA,YACA,SACA,OCzGWC,eAPS,SAAAC,GACpB,MAAO,CACHT,eAAgBS,EAAMT,eACtBD,SAAUU,EAAMV,YAMpB,CAAEW,QJjCiB,SAAAC,GAAW,OAAI,SAAAjB,GAClCA,EAAS,CAAEC,KAbW,eActBiB,IACKC,IADL,4CAC8CF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","file":"static/js/main.7a70836d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeball.484ea339.png\";","import axios from 'axios'\r\n\r\nexport const FETCH_DATA = 'FETCH_DATA';\r\nexport const UPDATE_TEAM = 'UPDATE_TEAM';\r\nexport const REMOVE_POKEMON = 'REMOVE_POKEMON';\r\nexport const CLEAR_TEAM = 'CLEAR_TEAM';\r\nexport const SET_ERROR = 'SET_ERROR';\r\nexport const TOGGLE_EDIT_NICKNAME = 'TOGGLE_EDIT_NICKNAME';\r\nexport const ADD_NICKNAME = 'ADD_NICKNAME';\r\nexport const CHANGE_ABILITY = 'CHANGE_ABILITY';\r\nexport const TOGGLE_EDIT_ABILITY = 'TOGGLE_EDIT_ABILITY';\r\nexport const CHANGE_MOVES = 'CHANGE_MOVES';\r\nexport const TOGGLE_EDIT_MOVES = 'TOGGLE_EDIT_MOVES';\r\n\r\nexport const getData = pokemonName => dispatch => {\r\n    dispatch({ type: FETCH_DATA });\r\n    axios\r\n        .get(`https://pokeapi.co/api/v2/pokemon/${pokemonName.toLowerCase()}`)\r\n        .then(res => {\r\n            dispatch({ type: UPDATE_TEAM, payload: res.data });\r\n        })\r\n        .catch(error => {\r\n            console.error('error fetching data from api, error: ', error);\r\n            dispatch({ type: SET_ERROR, payload: 'Error fetching data from api' });\r\n        });\r\n};\r\n\r\nexport const clearTeam = () => dispatch => {\r\n    dispatch({ type: CLEAR_TEAM });\r\n}\r\n\r\nexport const toggleEditNickname = (key) => dispatch => {\r\n    dispatch({ type: TOGGLE_EDIT_NICKNAME, payload: key });\r\n}\r\n\r\nexport const addNickname = (nickname, key) => dispatch => {\r\n    dispatch({ type: ADD_NICKNAME, payload: {nickname: nickname, key: key} });\r\n}\r\n\r\nexport const removePokemon = (key) => dispatch => {\r\n    dispatch({ type: REMOVE_POKEMON, payload: key })\r\n}\r\n\r\nexport const changeAbility = (ability, key) => dispatch => {\r\n    dispatch({ type: CHANGE_ABILITY, payload: {ability: ability, key: key} })\r\n}\r\n\r\nexport const toggleEditAbility = (key) => dispatch => {\r\n    dispatch({ type: TOGGLE_EDIT_ABILITY, payload: key })\r\n}\r\n\r\nexport const changeMoves = (moves, key) => dispatch => {\r\n    dispatch({ type: CHANGE_MOVES, payload: {moves: moves, key:key} })\r\n}\r\n\r\nexport const toggleEditMoves = (key) => dispatch => {\r\n    dispatch({ type: TOGGLE_EDIT_MOVES, payload: key})\r\n}","import { \r\n    FETCH_DATA, \r\n    UPDATE_TEAM, \r\n    REMOVE_POKEMON,\r\n    CLEAR_TEAM, \r\n    ADD_NICKNAME, \r\n    TOGGLE_EDIT_NICKNAME,\r\n    CHANGE_ABILITY,\r\n    TOGGLE_EDIT_ABILITY,\r\n    CHANGE_MOVES,\r\n    TOGGLE_EDIT_MOVES,\r\n    SET_ERROR \r\n} from '../actions';\r\n\r\nconst initialState = {\r\n    team: [],\r\n    teamSize: 0,\r\n    isFetchingData: false,\r\n    error: '',\r\n    isEditingNickname: -1,\r\n    isEditingAbility: -1,\r\n    isEditingMoves: -1\r\n};\r\n\r\nexport const pokemonReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case FETCH_DATA:\r\n            return {\r\n                ...state,\r\n                isFetchingData: true,\r\n            };\r\n        case UPDATE_TEAM:\r\n            return {\r\n                ...state,\r\n                team: [...state.team, action.payload],\r\n                teamSize: state.teamSize+1,\r\n                isFetchingData: false\r\n            };\r\n        case REMOVE_POKEMON:\r\n            return {\r\n                ...state,\r\n                team: state.team.filter((item, key) => {return key !== action.payload}),\r\n                teamSize: state.teamSize - 1\r\n            }\r\n        case CLEAR_TEAM:\r\n            return {\r\n                ...state,\r\n                team: [],\r\n                teamSize: 0\r\n            };\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                isFetchingData: false,\r\n                error: action.payload\r\n            };\r\n        case ADD_NICKNAME:\r\n            return {\r\n                ...state,\r\n                \r\n                team: state.team.map( (item, key) => key === action.payload.key ? {...state.team[key], nickname: action.payload.nickname} : {...state.team[key]} ),\r\n                isEditingNickname: -1\r\n            }\r\n        case TOGGLE_EDIT_NICKNAME:\r\n            return {\r\n                ...state,\r\n                isEditingNickname: action.payload\r\n            }\r\n        case CHANGE_ABILITY:\r\n            return{\r\n                ...state,\r\n                team: state.team.map( (item, key) => key === action.payload.key ? {...state.team[key], chosenAbility: action.payload.ability} : {...state.team[key]}),\r\n                isEditingAbility: -1\r\n            }\r\n        case TOGGLE_EDIT_ABILITY:\r\n            return{\r\n                ...state,\r\n                isEditingAbility: action.payload\r\n            }\r\n        case CHANGE_MOVES:\r\n            return {\r\n                ...state,\r\n                team: state.team.map( (item, key) => key === action.payload.key ? {...state.team[key], chosenMoves: action.payload.moves} : {...state.team[key]} ),\r\n                isEditingMoves: -1\r\n            }\r\n        case TOGGLE_EDIT_MOVES:\r\n            return {\r\n                ...state,\r\n                isEditingMoves: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react'\r\n\r\nconst Title = props => {\r\n    return (\r\n        <div>\r\n            <h1>Pokemon Team Creator</h1>\r\n        </div>\r\n    );\r\n}\r\nexport default Title;","const kantoPokemon = ['Bulbasaur',\r\n    'Ivysaur',\r\n    'Venusaur',\r\n    'Charmander',\r\n    'Charmeleon',\r\n    'Charizard',\r\n    'Squirtle',\r\n    'Wartortle',\r\n    'Blastoise',\r\n    'Caterpie',\r\n    'Metapod',\r\n    'Butterfree',\r\n    'Weedle',\r\n    'Kakuna',\r\n    'Beedrill',\r\n    'Pidgey',\r\n    'Pidgeotto',\r\n    'Pidgeot',\r\n    'Rattata',\r\n    'Raticate',\r\n    'Spearow',\r\n    'Fearow',\r\n    'Ekans',\r\n    'Arbok',\r\n    'Pikachu',\r\n    'Raichu',\r\n    'Sandshrew',\r\n    'Sandslash',\r\n    'Nidoran-f',\r\n    'Nidorina',\r\n    'Nidoqueen',\r\n    'Nidoran-m',\r\n    'Nidorino',\r\n    'Nidoking',\r\n    'Clefairy',\r\n    'Clefable',\r\n    'Vulpix',\r\n    'Ninetales',\r\n    'Jigglypuff',\r\n    'Wigglytuff',\r\n    'Zubat',\r\n    'Golbat',\r\n    'Oddish',\r\n    'Gloom',\r\n    'Vileplume',\r\n    'Paras',\r\n    'Parasect',\r\n    'Venonat',\r\n    'Venomoth',\r\n    'Diglett',\r\n    'Dugtrio',\r\n    'Meowth',\r\n    'Persian',\r\n    'Psyduck',\r\n    'Golduck',\r\n    'Mankey',\r\n    'Primeape',\r\n    'Growlithe',\r\n    'Arcanine',\r\n    'Poliwag',\r\n    'Poliwhirl',\r\n    'Poliwrath',\r\n    'Abra',\r\n    'Kadabra',\r\n    'Alakazam',\r\n    'Machop',\r\n    'Machoke',\r\n    'Machamp',\r\n    'Bellsprout',\r\n    'Weepinbell',\r\n    'Victreebel',\r\n    'Tentacool',\r\n    'Tentacruel',\r\n    'Geodude',\r\n    'Graveler',\r\n    'Golem',\r\n    'Ponyta',\r\n    'Rapidash',\r\n    'Slowpoke',\r\n    'Slowbro',\r\n    'Magnemite',\r\n    'Magneton',\r\n    'Farfetch’d',\r\n    'Doduo',\r\n    'Dodrio',\r\n    'Seel',\r\n    'Dewgong',\r\n    'Grimer',\r\n    'Muk',\r\n    'Shellder',\r\n    'Cloyster',\r\n    'Gastly',\r\n    'Haunter',\r\n    'Gengar',\r\n    'Onix',\r\n    'Drowzee',\r\n    'Hypno',\r\n    'Krabby',\r\n    'Kingler',\r\n    'Voltorb',\r\n    'Electrode',\r\n    'Exeggcute',\r\n    'Exeggutor',\r\n    'Cubone',\r\n    'Marowak',\r\n    'Hitmonlee',\r\n    'Hitmonchan',\r\n    'Lickitung',\r\n    'Koffing',\r\n    'Weezing',\r\n    'Rhyhorn',\r\n    'Rhydon',\r\n    'Chansey',\r\n    'Tangela',\r\n    'Kangaskhan',\r\n    'Horsea',\r\n    'Seadra',\r\n    'Goldeen',\r\n    'Seaking',\r\n    'Staryu',\r\n    'Starmie',\r\n    'Mr. Mime',\r\n    'Scyther',\r\n    'Jynx',\r\n    'Electabuzz',\r\n    'Magmar',\r\n    'Pinsir',\r\n    'Tauros',\r\n    'Magikarp',\r\n    'Gyarados',\r\n    'Lapras',\r\n    'Ditto',\r\n    'Eevee',\r\n    'Vaporeon',\r\n    'Jolteon',\r\n    'Flareon',\r\n    'Porygon',\r\n    'Omanyte',\r\n    'Omastar',\r\n    'Kabuto',\r\n    'Kabutops',\r\n    'Aerodactyl',\r\n    'Snorlax',\r\n    'Articuno',\r\n    'Zapdos',\r\n    'Moltres',\r\n    'Dratini',\r\n    'Dragonair',\r\n    'Dragonite',\r\n    'Mewtwo',\r\n    'Mew'\r\n]\r\n\r\nexport default kantoPokemon;","import React, { useState } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport { getData, clearTeam } from '../actions';\r\nimport kantoPokemon from '../data/data';\r\n\r\nconst Form = props => {\r\n    const [activePokemon, setActivePokemon] = useState('')\r\n\r\n    const handleGetData = e => {\r\n        e.preventDefault();\r\n        if(!activePokemon){ \r\n         } else if(props.teamSize < 6){\r\n            props.getData(activePokemon);\r\n        } else {\r\n            //notify user that team is full\r\n        }\r\n    }\r\n\r\n    const handleClearTeam = e => {\r\n        e.preventDefault();\r\n        props.clearTeam();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <select onChange={ e => { setActivePokemon(e.target.value) } }>\r\n                    <option disabled selected value> -- Select a Pokemon -- </option>\r\n                    {kantoPokemon.map( (item, dex) => <option value={item} key={dex}>{item}</option>)}\r\n                </select>\r\n                <input type='submit' onClick={handleGetData} value='Add to Team'/>\r\n                <input type='button' onClick={handleClearTeam} value='Clear Team' />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isFetchingData: state.isFetchingData,\r\n        teamSize: state.teamSize\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getData, clearTeam }\r\n) (Form);","export const capitalize = str => {\r\n    return str[0].toUpperCase() + str.slice(1);\r\n}\r\n\r\nexport const formatString = str => {\r\n    const splitString = str.split('-');\r\n    let final = '';\r\n    splitString.forEach( item => {final = `${final} ${capitalize(item)}`} );\r\n    return final;\r\n}","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { formatString, capitalize } from '../actions/utilities'\r\n\r\nimport { toggleEditNickname, addNickname, removePokemon, changeAbility, toggleEditAbility, changeMoves, toggleEditMoves } from '../actions';\r\n\r\nconst TeamCard = props => {\r\n    const [nickname, setNickname] = useState('');\r\n    const [ability, setAbility] = useState('');\r\n    const [firstMove, setFirstMove] = useState('');\r\n    const [secondMove, setSecondMove] = useState('');\r\n    const [thirdMove, setThirdMove] = useState('');\r\n    const [fourthMove, setFourthMove] = useState('');\r\n\r\n    const handleNicknameChange = e => {\r\n        setNickname(e.target.value)\r\n    }\r\n\r\n    const handleAbilityChange = e => {\r\n        setAbility(e.target.value)\r\n    }\r\n\r\n    const handleFirstMoveChange = e => {\r\n        setFirstMove(e.target.value);\r\n    }\r\n    const handleSecondMoveChange = e => {\r\n        setSecondMove(e.target.value);\r\n    }\r\n    const handleThirdMoveChange = e => {\r\n        setThirdMove(e.target.value);\r\n    }\r\n    const handleFourthMoveChange = e => {\r\n        setFourthMove(e.target.value);\r\n    }\r\n\r\n    const validateMoves = () => {\r\n        if(!firstMove && !secondMove && !thirdMove && !fourthMove)\r\n            return false;\r\n        const arr = [firstMove, secondMove, thirdMove, fourthMove].filter( item => {return item !== ''} )\r\n        if( (new Set(arr)).size !== arr.length )\r\n            return false;\r\n        return true;\r\n    }\r\n\r\n    const handleSumbitMoves = () => {\r\n        if(!validateMoves())\r\n            return;\r\n        else{\r\n            const movesArray = [firstMove, secondMove, thirdMove, fourthMove].filter( item => { return item !== ''} )\r\n            props.changeMoves(movesArray, props.posn)\r\n        }\r\n    }\r\n\r\n    const handleToggleEditMoves = () => {\r\n        setFirstMove('');\r\n        setSecondMove('');\r\n        setThirdMove('');\r\n        setFourthMove('');\r\n        props.toggleEditMoves(props.posn)\r\n    }\r\n\r\n    console.log(props)\r\n    return (\r\n        \r\n        <div className='team-card'>\r\n            <div className='remove' onClick={() => props.removePokemon(props.posn)}>X</div>\r\n            <img src={props.pokemon.sprites.front_default} alt={props.pokemon.species.name}/>\r\n            <table>\r\n                <tr>\r\n                    <td className='toggle' onClick={() => props.toggleEditNickname(props.posn)} >Nickname:</td>\r\n                    <td>{props.isEditingNickname === props.posn ? \r\n                            <form> <input className='nickname' type='text' onChange={handleNicknameChange}/><input className='nickname-btn' value={'\\u2713'} onClick={() => props.addNickname(nickname, props.posn)} type='button'/> </form> :\r\n                            props.pokemon.nickname ? props.pokemon.nickname : capitalize(props.pokemon.species.name)\r\n                        }</td>\r\n                </tr>\r\n                <tr>\r\n                    <td className='toggle' onClick={() => props.toggleEditAbility(props.posn)} >Ability:</td>\r\n                    <td>{props.isEditingAbility === props.posn ?\r\n                            <form> \r\n                                <select className='ability' onChange={handleAbilityChange}>\r\n                                    <option value='[none]'>[none]</option>\r\n                                    {props.pokemon.abilities.map( (item, key) => <option value={item.ability.name} key={key}>{item.ability.name}</option>)}\r\n                                </select>\r\n                                <input className='nickname-btn' value={'\\u2713'} onClick={() => props.changeAbility(ability, props.posn)} type='button'/>\r\n                            </form> :\r\n                            props.pokemon.chosenAbility ? formatString(props.pokemon.chosenAbility) : formatString(props.pokemon.abilities[0].ability.name)\r\n                        }</td>\r\n                </tr>\r\n                <tr>\r\n                    <td className='toggle' onClick={handleToggleEditMoves} >Moves:</td>\r\n                    <td>{props.isEditingMoves === props.posn ? \r\n                            <>\r\n                            <select className='firstMove' onChange={handleFirstMoveChange}>\r\n                                <option value=''>[none]</option>\r\n                                {props.pokemon.moves.map( (item, key) => <option value={item.move.name} key={key}>{item.move.name}</option>)}\r\n                            </select>\r\n                            <select className='secondMove' onChange={handleSecondMoveChange}>\r\n                                <option value=''>[none]</option>\r\n                                {props.pokemon.moves.map( (item, key) => <option value={item.move.name} key={key}>{item.move.name}</option>)}\r\n                            </select>\r\n                            <select className='thirdMove' onChange={handleThirdMoveChange}>\r\n                                <option value=''>[none]</option>\r\n                                {props.pokemon.moves.map( (item, key) => <option value={item.move.name} key={key}>{item.move.name}</option>)}\r\n                            </select>\r\n                            <select className='fourthMove' onChange={handleFourthMoveChange}>\r\n                                <option value=''>[none]</option>\r\n                                {props.pokemon.moves.map( (item, key) => <option value={item.move.name} key={key}>{item.move.name}</option>)}\r\n                            </select>\r\n                            <input type='button' className='moves-btn' onClick={handleSumbitMoves} value={'\\u2713'} /></> :\r\n                            \r\n                            props.pokemon.chosenMoves ? \r\n                                <>\r\n                                <p>{props.pokemon.chosenMoves[0] ? formatString(props.pokemon.chosenMoves[0]) : '[none]'}</p>\r\n                                <p>{props.pokemon.chosenMoves[1] ? formatString(props.pokemon.chosenMoves[1]) : '[none]'}</p>\r\n                                <p>{props.pokemon.chosenMoves[2] ? formatString(props.pokemon.chosenMoves[2]) : '[none]'}</p>\r\n                                <p>{props.pokemon.chosenMoves[3] ? formatString(props.pokemon.chosenMoves[3]) : '[none]'}</p>\r\n                                </>:\r\n                                <>\r\n                                <p>{props.pokemon.moves[0] ? formatString(props.pokemon.moves[0].move.name) : '[none]'}</p>\r\n                                <p>{props.pokemon.moves[1] ? formatString(props.pokemon.moves[1].move.name) : '[none]'}</p>\r\n                                <p>{props.pokemon.moves[2] ? formatString(props.pokemon.moves[2].move.name) : '[none]'}</p>\r\n                                <p>{props.pokemon.moves[3] ? formatString(props.pokemon.moves[3].move.name) : '[none]'}</p>\r\n                                </>\r\n                        }\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isEditingNickname: state.isEditingNickname,\r\n        isEditingAbility: state.isEditingAbility,\r\n        isEditingMoves: state.isEditingMoves\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { toggleEditNickname, addNickname, removePokemon, changeAbility, toggleEditAbility, changeMoves, toggleEditMoves }\r\n) (TeamCard);","import React from 'react'\r\n\r\nconst EmptyTeamCard = () => {\r\n    return (\r\n        <div className='empty team-card'>\r\n            <img src={require('../assets/pokeball.png')} alt='pokeball'/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default EmptyTeamCard;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addNickname } from '../actions'\r\n\r\nimport TeamCard from './TeamCard';\r\nimport EmptyTeamCard from './EmptyTeamCard';\r\n\r\nconst Team = props => {\r\n    let empty = []\r\n    for(let i=0; i<6-props.teamSize; i++) {\r\n        empty.push(<EmptyTeamCard key={ i+10 } />)\r\n    }\r\n    return(\r\n        <>\r\n        {!props.error ? (\r\n            <div className='team-container'>\r\n                {\r\n                    props.team.map( (item, i) => (\r\n                            <TeamCard pokemon={item} key={i} posn={i} />\r\n                    ))\r\n                }\r\n                {   empty.map( item => item)    }\r\n            </div>\r\n        ) : (\r\n            <div className='error'>{props.error}</div>\r\n        )}\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        team: state.team,\r\n        teamSize: state.teamSize,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { addNickname }\r\n) (Team);","import React from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { pokemonReducer as reducer } from './reducers/pokemonReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport './App.css';\n\nimport Title from './components/Title';\nimport Form from './components/Form';\nimport Team from './components/Team';\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Title/>\n        <Form/>\n        <Team/>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}